generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String        @id @default(uuid())
  email    String        @unique
  password String
  Rating   Rating[]
  vouchers UserVoucher[]
}

model CoffeeShop {
  id                 String               @id @default(uuid())
  latitude           Float
  longitude          Float
  name               String
  address            String
  cost               Cost
  urlImage           String
  product            ProductTag[]
  environment        Environment?
  rating             Rating[]
  voucherPromotional VoucherPromotional[]
  SocialMedias       SocialMedias[]
}

model Rating {
  id           String     @id @default(uuid())
  stars        Int
  feedback     String?
  date         DateTime   @default(now())
  userId       String
  coffeeShopId String
  user         User       @relation(fields: [userId], references: [id])
  coffeeShop   CoffeeShop @relation(fields: [coffeeShopId], references: [id])
}

model VoucherPromotional {
  id                String        @id @default(uuid())
  voucher           String
  redeemed          Boolean       @default(false)
  availableQuantity Int
  validFrom         DateTime?
  validUntil        DateTime?
  redeemedAt        DateTime?
  redemptionCode    String?
  qrCodeUrl         String?
  coffeeShopId      String
  coffeeShop        CoffeeShop    @relation(fields: [coffeeShopId], references: [id])
  users             UserVoucher[] 
}

model UserVoucher {
  id         String             @id @default(uuid())
  userId     String
  voucherId  String
  redeemedAt DateTime           @default(now())
  user       User               @relation(fields: [userId], references: [id])
  voucher    VoucherPromotional @relation(fields: [voucherId], references: [id])

  @@unique([userId, voucherId])
}

model Environment {
  id           String         @id @default(uuid())
  description  String
  socialMedias SocialMedias[]
  openingHours String
  coffeTypes   CoffeTypes[]
  urlImages    String[]
  coffeeShopId String         @unique
  coffeeShop   CoffeeShop     @relation(fields: [coffeeShopId], references: [id])
}

model SocialMedias {
  id            String       @id @default(uuid())
  name          String
  url           String
  coffeeShopId  String
  coffeeShop    CoffeeShop   @relation(fields: [coffeeShopId], references: [id])
  Environment   Environment? @relation(fields: [environmentId], references: [id])
  environmentId String?
}

enum CoffeTypes {
  ESPECIAIS
  TRADICIONAIS
  CHAS
}

enum Cost {
  BAIXO
  MEDIO
  ALTO
}

enum ProductTag {
  VEGANO
  VEGETARIANO
  PETFRIENDLY
  COWORKING
  WIFI
  SEM_GLUTEN
  MENOR_PRECO
  MAIOR_PRECO
}
